{"version":3,"sources":["../../src/openapi.js"],"names":["_","CmsSigner","apiVersions","rds","ecs","slb","OpenApi","options","_endpoint","endpoint","_version","version","_credentials","credentials","_proxy","proxy","method","params","segs","forEach","v","k","push","encodeURIComponent","path","join","signer","accessKeyId","access_key","secretAccessKey","secret_key","addAuthorization","request","resp","datasourceRequest","url","headers","status","Error","data","Code","Message","type","Object","assign"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;AACEC,e,WAAAA,S;;;;;;;;;;;;;;;;;;;;;AAEHC,iB,GAAc;AAClBC,aAAK,YADa;AAElBC,aAAK,YAFa;AAGlBC,aAAK;AAHa,O;;AAMCC,a;AACnB,yBAAYC,OAAZ,EAAqB;AAAA;;AACnB,eAAKC,SAAL,GAAiBD,QAAQE,QAAzB;AACA,eAAKC,QAAL,GAAgBH,QAAQI,OAAxB;AACA,eAAKC,YAAL,GAAoBL,QAAQM,WAA5B;AACA,eAAKC,MAAL,GAAcP,QAAQQ,KAAtB,CAJmB,CAIS;AAC7B;;;;8BAEGC,M,EAAQC,M,EAAQ;AAClB,gBAAIC,OAAO,EAAX;AACAlB,cAAEmB,OAAF,CAAUF,MAAV,EAAkB,UAACG,CAAD,EAAIC,CAAJ,EAAU;AAC1BH,mBAAKI,IAAL,CAAUD,IAAI,GAAJ,GAAUE,mBAAmBH,CAAnB,CAApB;AACD,aAFD;;AAIA,gBAAII,OAAO,OAAON,KAAKO,IAAL,CAAU,GAAV,CAAlB;AACA,gBAAIC,SAAS,IAAIzB,SAAJ,CAAc;AACzB0B,2BAAa,KAAKf,YAAL,CAAkBgB,UADN;AAEzBC,+BAAiB,KAAKjB,YAAL,CAAkBkB,UAFV;AAGzBnB,uBAAS,KAAKD;AAHW,aAAd,EAIV;AACDc,oBAAMA,IADL;AAEDR,sBAAQA;AAFP,aAJU,CAAb;;AASAU,mBAAOK,gBAAP;;AAEA,mBAAO,KAAKvB,SAAL,GAAiBkB,OAAOM,OAAP,CAAeR,IAAvC;AACD;;;wCAEaR,M,EAAQC,M,EAAQ;AAC5B,gBAAIgB,OAAO,MAAM,KAAKnB,MAAL,CAAYoB,iBAAZ,CAA8B;AAC7CC,mBAAK,KAAKA,GAAL,CAASnB,MAAT,EAAiBC,MAAjB,CADwC;AAE7CD,sBAAQA,MAFqC;AAG7CoB,uBAAS;AACP,gCAAgB;AADT;AAHoC,aAA9B,CAAjB;;AAQA,gBAAIH,KAAKI,MAAL,KAAgB,GAApB,EAAyB;AACvB,oBAAM,IAAIC,KAAJ,CAAU,8BAA8BL,KAAKM,IAAL,CAAUC,IAAxC,GAA+C,GAA/C,GAAqDP,KAAKM,IAAL,CAAUE,OAAzE,CAAN;AACD;;AAED,mBAAOR,KAAKM,IAAZ;AACD;;;iCAEaG,I,EAAMnC,O,EAAS;AAC3B,mBAAO,IAAID,OAAJ,CAAYqC,OAAOC,MAAP,CAAc;AAC/BnC,qCAAqBiC,IAArB,kBAD+B;AAE/B/B,uBAAST,YAAYwC,IAAZ;AAFsB,aAAd,EAGhBnC,OAHgB,CAAZ,CAAP;AAID;;;;;;yBAlDkBD,O","file":"openapi.js","sourcesContent":["import _ from 'lodash'\nimport { CmsSigner } from './signer'\n\nconst apiVersions = {\n  rds: '2014-08-15',\n  ecs: '2014-05-26',\n  slb: '2014-05-15'\n}\n\nexport default class OpenApi {\n  constructor(options) {\n    this._endpoint = options.endpoint\n    this._version = options.version\n    this._credentials = options.credentials\n    this._proxy = options.proxy // backendSrv\n  }\n\n  url(method, params) {\n    let segs = []\n    _.forEach(params, (v, k) => {\n      segs.push(k + '=' + encodeURIComponent(v))\n    })\n\n    let path = '/?' + segs.join('&')\n    let signer = new CmsSigner({\n      accessKeyId: this._credentials.access_key,\n      secretAccessKey: this._credentials.secret_key,\n      version: this._version\n    }, {\n      path: path,\n      method: method\n    });\n\n    signer.addAuthorization();\n\n    return this._endpoint + signer.request.path;\n  }\n\n  async request(method, params) {\n    let resp = await this._proxy.datasourceRequest({\n      url: this.url(method, params),\n      method: method,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n\n    if (resp.status !== 200) {\n      throw new Error('AliCloud OpenAPI Failed: ' + resp.data.Code + ' ' + resp.data.Message)\n    }\n\n    return resp.data\n  }\n\n  static create(type, options) {\n    return new OpenApi(Object.assign({\n      endpoint: `https://${type}.aliyuncs.com`,\n      version: apiVersions[type]\n    }, options))\n  }\n}"]}